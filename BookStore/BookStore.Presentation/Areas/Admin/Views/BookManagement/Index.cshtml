@model PaginatedList<Book>

@{
    ViewData["Title"] = "Book Management | Book Store";
}

<h2>Book Management</h2>

<hr />
<div>
    <a href="@Url.Action("AddBook", "BookManagement")" class="btn btn-primary float-left">Add Book</a>

    <form action="@Url.Action("Index", "BookManagement")" method="get" class="form-inline float-right">

        @*<div class="form-group mx-sm-3 mb-2">
                <label class="my-1 mr-2" for="sortOrder">Order By:</label>
                <select class="custom-select my-1 mr-sm-2" id="orderBy">
                    <option value="1">Price Up</option>
                    <option value="2">Price Down</option>
                </select>
            </div>*@
        <div class="form-group mx-sm-3 mb-2">
            <label for="inputSearch" class="control-label mr-3">Input: </label>
            <input type="text" class="form-control mr-3" id="inputSearch" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Input....">
            <input type="submit" class=" form-control btn btn-primary mr-3" value="Search" /> |
            <a href="/Admin/BookManagement/Index" class="btn btn-default">Back to Full List</a>
        </div>

    </form>
</div>

@if (!Model.Any())
{
    <tr><td colspan="3" class="text-center">Don't have a book yet.</td></tr>
}
else
{
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                ViewBag.PageRange = 3;
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=1, currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><<</a>
            <li class="page-item">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=(Model.PageIndex - 1 <= 0 ? 1 : Model.PageIndex - 1), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @prevDisabled"><</a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i >= Model.PageIndex - ViewBag.PageRange && i <= Model.PageIndex + ViewBag.PageRange)
                {
                    <li class="page-item">
                        <a class="@(i==Model.PageIndex ? "Current" : "") page-link"
                           href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=i, currentFilter=ViewData["CurrentFilter"] })">@i</a>
                    </li>
                }
                @*<li class="page-item"><a class="page-link" href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=i, currentFilter=ViewData["CurrentFilter"] })">@i</a></li>*@
            }
            <li class="page-item">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=(Model.PageIndex + 1 > Model.TotalPages ? Model.TotalPages : Model.PageIndex + 1), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">></a>
            <li class="page-item">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder=ViewData["CurrentSort"], page=(Model.TotalPages), currentFilter=ViewData["CurrentFilter"] })"
                   class="btn page-link @nextDisabled">>></a>
        </ul>
    </nav>
    <table class="table table-condensed table-bordered">
        <tr class="d-flex">
            <th class="col-md-2">Image</th>
            <th class="col-md-4">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder = ViewData["TitleSortParm"], currentFilter = ViewData["CurrentFilter"] })">Title</a>
            </th>
            <th class="col-md-2">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder = ViewData["PriceSortParm"], currentFilter = ViewData["CurrentFilter"] })">Price</a>
            </th>
            <th class="col-md-1">
                <a href="@Url.Action("Index", "BookManagement", new { sortOrder = ViewData["QuantitySortParm"], currentFilter = ViewData["CurrentFilter"] })">Quantity</a>
            </th>
            <th class="col-md-1">Is Active</th>
            <th class="col-md-2">Manage</th>
        </tr>

        @foreach (var book in Model)
        {
            <tr class="d-flex">
                <td class="col-md-2">
                    <img style="max-width:150px;" src="~/Assets/images/@book.ImageUrl" alt="@book.Title" />
                </td>
                <td class="col-md-4">
                    <a href="@Url.Action("Details", "Book", new { id = book.BookId, area = "" })">@book.Title</a>
                </td>
                <td class="col-md-2">
                    @book.Price.ToString("C0", CultureInfo.CreateSpecificCulture("vi-VN"))
                </td>
                <td class="col-md-1">
                    @book.Quantity
                </td>
                <td class="col-md-1">
                    @book.IsActive
                </td>
                <td class="col-md-2">
                    <form action="@Url.Action("DeleteBook","BookManagement", new { id=book.BookId })" method="post">
                        <a href="@Url.Action("EditBook","BookManagement", new { id=book.BookId })" class="btn btn-primary">Edit</a>
                        <button type="submit" onclick="return confirm('Are you sure to delete this book?');" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </table>
}